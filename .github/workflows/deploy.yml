name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install

      - name: Run Tests
        run: yarn run test

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_PORT=${{ secrets.DB_PORT }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_USERNAME=${{ secrets.USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}

            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            export DB_SYNC=${{ secrets.DB_SYNC }}
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

            export PORT=${{ secrets.PORT }}

            echo "${{ secrets.GCP_CREDENTIALS }}" > ~/whisprr_backend/gcp-credentials.json
            

            chmod 600 ~/whisprr_backend/gcp-credentials.json

            
            cd ~/whisprr_backend
            git fetch origin dev
            git reset --hard origin/dev
            docker-compose down
            COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose up -d --build

          EOF
